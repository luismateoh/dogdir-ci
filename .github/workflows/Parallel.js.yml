on:
  push:
    branches: [main]


name: Parallel works

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - run: npm ci
      - uses: actions/cache@v2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}

  test:
    name: Run Test
    runs-on: ubuntu-latest
    needs: [install]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: actions/cache@v2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: npm run test
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [install]
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: actions/cache@v2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: npm run build
  scan:
    name: Sonar Scanner
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: actions/cache@v2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: npm run sonar-test
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [build, scan]
    
    steps:

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: actions/cache@v2
        id: restore-install
        with:
          path: ./*
          key: ${{ github.sha }}
        if: github.ref == 'refs/heads/main'
      - run: |
          jfrog npm run build
          jfrog rt upload "build/" default-npm-local/ 
          jfrog rt bp
